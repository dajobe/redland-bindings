library project Librdf is

   type Library_Kind_Type is ("static", "dynamic");
   Library_Kind : Library_Kind_Type := external ("LIBRARY_KIND", "static");

   type Compilation_Mode_Type is
      ("Devel", "Install");
   type Runtime_Type is
      ("cert", "default", "full", "hi", "kernel", "kernel-sjlj", "kernel-smp", "pthread", "sjlj", "ravenscar", "ravenscar-apex", "ravenscar-full", "ravenscar-cert", "ravenscar-cert-rci", "ravenscar-cert-rtp", "ravenscar-sfp", "rtp", "rtp-smp",
      "soft-float", "xenomai", "zcx", "zfp", "minimal");
   for Library_Name use "rdf-ada";
   for Library_Dir use "lib";
   for Library_Kind use external ("LIBRARY_KIND", "dynamic");
   for Library_Version use external ("soversion", "default");
   for Source_Dirs use ("src");
   case LIBRARY_KIND is
      when "dynamic" =>
          for Object_Dir use "obj-dynamic";
          for Library_Ali_Dir use "ali-dynamic";
      when others =>
          for Object_Dir use "obj-static";
          for Library_Ali_Dir use "ali-static";
   end case;
   RUNTIME : Runtime_Type := external ("RUNTIME", "default");
   MODE : Compilation_Mode_Type := external ("MODE");

   package Compiler is
      for Default_Switches ("ada") use ("-g", "-O2", "-gnat2012");
   end Compiler;

   package Linker is

      case RUNTIME is

         when "cert" =>

         when "default" =>

         when "full" =>

            case MODE is

               when "Devel" =>

               when "Install" =>
                  for Linker_Options use ("-lraptor2");
            end case;

         when "hi" =>

         when "kernel" =>

         when "kernel-sjlj" =>

         when "kernel-smp" =>

         when "pthread" =>

         when "sjlj" =>

         when "ravenscar" =>

         when "ravenscar-apex" =>

         when "ravenscar-full" =>

         when "ravenscar-cert" =>

         when "ravenscar-cert-rci" =>

         when "ravenscar-cert-rtp" =>

         when "ravenscar-sfp" =>

         when "rtp" =>

         when "rtp-smp" =>

         when "soft-float" =>

         when "xenomai" =>

         when "zcx" =>

         when "zfp" =>

         when "minimal" =>

      end case;
   end Linker;

end Librdf;

